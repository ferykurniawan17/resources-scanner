"use strict";function _typeof(a){"@babel/helpers - typeof";return _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},_typeof(a)}function ownKeys(a,b){var c=Object.keys(a);if(Object.getOwnPropertySymbols){var d=Object.getOwnPropertySymbols(a);b&&(d=d.filter(function(b){return Object.getOwnPropertyDescriptor(a,b).enumerable})),c.push.apply(c,d)}return c}function _objectSpread(a){for(var b,c=1;c<arguments.length;c++)b=null==arguments[c]?{}:arguments[c],c%2?ownKeys(Object(b),!0).forEach(function(c){_defineProperty(a,c,b[c])}):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(b)):ownKeys(Object(b)).forEach(function(c){Object.defineProperty(a,c,Object.getOwnPropertyDescriptor(b,c))});return a}function _defineProperty(a,b,c){return(b=_toPropertyKey(b))in a?Object.defineProperty(a,b,{value:c,enumerable:!0,configurable:!0,writable:!0}):a[b]=c,a}function _toPropertyKey(a){var b=_toPrimitive(a,"string");return"symbol"==_typeof(b)?b:b+""}function _toPrimitive(a,b){if("object"!=_typeof(a)||!a)return a;var c=a[Symbol.toPrimitive];if(void 0!==c){var d=c.call(a,b||"default");if("object"!=_typeof(d))return d;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===b?String:Number)(a)}// eslint-disable-next-line @typescript-eslint/no-var-requires
var fs=require("fs"),Parser=require("i18next-scanner").Parser;// eslint-disable-next-line @typescript-eslint/no-var-requires
function scan(a,b){var c,d=new Parser,e=fs.readFileSync(a,"utf-8");if(null!==b&&void 0!==b&&null!==(c=b.i18next)&&void 0!==c&&c.transform){var f,g=null===b||void 0===b||null===(f=b.i18next)||void 0===f?void 0:f.transform(d,e);if(g)return g}else{var h,i;d.parseFuncFromString(e,{list:null!==(h=null===b||void 0===b||null===(i=b.i18next)||void 0===i?void 0:i.list)&&void 0!==h?h:["t","i18next.t","i18n.t"]},function(a,b){d.set(a,_objectSpread(_objectSpread({},b),{},{nsSeparator:!1,keySeparator:!1,defaultNs:""}))}).parseFuncFromString(e);var j=d.get();if(j.en&&j.en.translation)return j.en.translation}return{}}module.exports={scan:scan};