"use strict";function _toConsumableArray(a){return _arrayWithoutHoles(a)||_iterableToArray(a)||_unsupportedIterableToArray(a)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(b,c){if(b){if("string"==typeof b)return _arrayLikeToArray(b,c);var a={}.toString.call(b).slice(8,-1);return"Object"===a&&b.constructor&&(a=b.constructor.name),"Map"===a||"Set"===a?Array.from(b):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(b,c):void 0}}function _iterableToArray(a){if("undefined"!=typeof Symbol&&null!=a[Symbol.iterator]||null!=a["@@iterator"])return Array.from(a)}function _arrayWithoutHoles(a){if(Array.isArray(a))return _arrayLikeToArray(a)}function _arrayLikeToArray(b,c){(null==c||c>b.length)&&(c=b.length);for(var d=0,f=Array(c);d<c;d++)f[d]=b[d];return f}// eslint-disable-next-line @typescript-eslint/no-var-requires
var fs=require("fs"),path=require("path"),utils=require("./utils");// eslint-disable-next-line @typescript-eslint/no-var-requires
// eslint-disable-next-line @typescript-eslint/no-var-requires
function getExtentionFile(a,b){var c=b.exts.find(function(b){try{return fs.accessSync("".concat(a).concat(b)),!0}catch(a){return!1}});return c?"".concat(a).concat(c):(c=b.exts.find(function(b){try{return fs.accessSync("".concat(a,"/index").concat(b)),!0}catch(a){return!1}}),c?"".concat(a,"/index").concat(c):null)}function extractFilePaths(a,b,c){// Regular expression untuk mencari import statement dan mengekstrak path file
// const regex =
//   /import\s+([^\s]+(?:\s*,\s*[^\s]+)*|\{[^}]*\})\s+from\s+['"]([^'"]+)['"]/g;
for(var d,e=/from\s+['"]([^'"]+)['"]/g,f=[],g=utils.getRootProjectDir();null!==(d=e.exec(a));){var h=Object.keys(c.alias).find(function(a){return d[1].startsWith(a)});if(h){var i=d[1].replace(h,c.alias[h]),j=getExtentionFile("".concat(g,"/").concat(i),c);j&&f.push(j)}else if(d[1].startsWith(".")){var k=path.resolve(path.dirname(b),d[1]),l=getExtentionFile(k,c);l&&f.push(l)}}return f}function loadFileDependency(a,b,c){var d=fs.readFileSync(a,"utf-8"),e=extractFilePaths(d,a,c);return e.forEach(function(a){b.includes(a)||(b.push(a),loadFileDependency(a,b,c))}),[].concat(_toConsumableArray(e),_toConsumableArray(b))}module.exports=loadFileDependency;